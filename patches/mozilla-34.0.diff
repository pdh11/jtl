--- mozilla-release/gfx/thebes/gfxFontUtils.cpp~	2014-11-26 02:17:16.000000000 +0000
+++ mozilla-release/gfx/thebes/gfxFontUtils.cpp	2014-12-30 17:15:06.716604470 +0000
@@ -28,6 +28,8 @@
 #include "plbase64.h"
 #include "prlog.h"
 
+#include <stdio.h>
+
 #ifdef PR_LOGGING
 
 #define LOG(log, args) PR_LOG(gfxPlatform::GetLog(log), \
@@ -831,14 +833,15 @@ IsValidSFNTVersion(uint32_t version)
 
 // copy and swap UTF-16 values, assume no surrogate pairs, can be in place
 static void
-CopySwapUTF16(const uint16_t *aInBuf, uint16_t *aOutBuf, uint32_t aLen)
+CopySwapUTF16(const uint8_t *aInBuf, uint8_t *aOutBuf, uint32_t aLen)
 {
-    const uint16_t *end = aInBuf + aLen;
+    const uint8_t *end = aInBuf + aLen;
     while (aInBuf < end) {
-        uint16_t value = *aInBuf;
-        *aOutBuf = (value >> 8) | (value & 0xff) << 8;
-        aOutBuf++;
-        aInBuf++;
+        uint8_t b0 = *aInBuf;
+        *aOutBuf = aInBuf[1];
+        aOutBuf[1] = b0;
+        aOutBuf+=2;
+        aInBuf+=2;
     }
 }
 
@@ -1331,8 +1334,9 @@ gfxFontUtils::DecodeFontName(const char
         uint32_t strLen = aByteLen / 2;
 #ifdef IS_LITTLE_ENDIAN
         aName.SetLength(strLen);
-        CopySwapUTF16(reinterpret_cast<const uint16_t*>(aNameData),
-                      reinterpret_cast<uint16_t*>(aName.BeginWriting()), strLen);
+        CopySwapUTF16(reinterpret_cast<const uint8_t*>(aNameData),
+                      reinterpret_cast<uint8_t*>(aName.BeginWriting()), 
+                      strLen*2);
 #else
         aName.Assign(reinterpret_cast<const char16_t*>(aNameData), strLen);
 #endif    
