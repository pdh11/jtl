--- xine-lib-1.1.19/src/combined/ffmpeg/ff_audio_decoder.c~	2010-03-23 15:41:49.000000000 +0000
+++ xine-lib-1.1.19/src/combined/ffmpeg/ff_audio_decoder.c	2011-10-23 18:31:45.000000000 +0100
@@ -285,12 +285,15 @@ static void ff_audio_decode_data (audio_
 
     if (!this->output_open) {
       if (!this->audio_bits || !this->audio_sample_rate || !this->audio_channels) {
+          AVPacket avp;
+          av_init_packet(&avp);
+          avp.data = &this->buf[0];
+          avp.size = this->size;
         decode_buffer_size = AVCODEC_MAX_AUDIO_FRAME_SIZE;
-        avcodec_decode_audio2 (this->context,
+        avcodec_decode_audio3 (this->context,
                               (int16_t *)this->decode_buffer,
                               &decode_buffer_size,
-                              &this->buf[0],
-                              this->size);
+                               &avp);
 	this->audio_bits = this->context->bits_per_sample;
 	this->audio_sample_rate = this->context->sample_rate;
 	this->audio_channels = this->context->channels;
@@ -310,12 +313,15 @@ static void ff_audio_decode_data (audio_
 
       offset = 0;
       while (this->size>0) {
+          AVPacket avp;
+          av_init_packet(&avp);
+          avp.data = &this->buf[offset];
+          avp.size = this->size;
         decode_buffer_size = AVCODEC_MAX_AUDIO_FRAME_SIZE;
-        bytes_consumed = avcodec_decode_audio2 (this->context,
+        bytes_consumed = avcodec_decode_audio3 (this->context,
                                                (int16_t *)this->decode_buffer,
                                                &decode_buffer_size,
-                                               &this->buf[offset],
-                                               this->size);
+                                                &avp);
 
         if (bytes_consumed<0) {
           xprintf (this->stream->xine, XINE_VERBOSITY_DEBUG,
--- xine-lib-1.1.19/src/combined/ffmpeg/ff_video_decoder.c~	2010-03-10 19:07:15.000000000 +0000
+++ xine-lib-1.1.19/src/combined/ffmpeg/ff_video_decoder.c	2011-10-23 18:36:22.000000000 +0100
@@ -1023,9 +1023,10 @@ static void ff_handle_mpeg12_buffer (ff_
   lprintf("handle_mpeg12_buffer\n");
 
   while ((size > 0) || (flush == 1)) {
-
     uint8_t *current;
     int next_flush;
+    AVPacket avp;
+    av_init_packet(&avp);
 
     got_picture = 0;
     if (!flush) {
@@ -1055,12 +1056,14 @@ static void ff_handle_mpeg12_buffer (ff_
     }
 
     /* skip decoding b frames if too late */
-    this->context->hurry_up = (this->skipframes > 0);
+    this->context->skip_frame = (this->skipframes > 0);
+
+          avp.data = this->mpeg_parser->chunk_buffer;
+          avp.size = this->mpeg_parser->buffer_size;
 
     lprintf("avcodec_decode_video: size=%d\n", this->mpeg_parser->buffer_size);
-    len = avcodec_decode_video (this->context, this->av_frame,
-                                &got_picture, this->mpeg_parser->chunk_buffer,
-                                this->mpeg_parser->buffer_size);
+    len = avcodec_decode_video2 (this->context, this->av_frame,
+                                &got_picture, &avp);
     lprintf("avcodec_decode_video: decoded_size=%d, got_picture=%d\n",
             len, got_picture);
     len = current - buf->content - offset;
@@ -1112,7 +1115,7 @@ static void ff_handle_mpeg12_buffer (ff_
 
     } else {
 
-      if (this->context->hurry_up) {
+      if (this->context->skip_frame) {
         /* skipped frame, output a bad frame */
         img = this->stream->video_out->get_frame (this->stream->video_out,
                                                   this->bih.biWidth,
@@ -1303,13 +1306,17 @@ static void ff_handle_buffer (ff_video_d
         this->size = 0;
         got_picture = 0;
       } else {
+          AVPacket avp;
+          av_init_packet(&avp);
+          avp.data = &chunk_buf[offset];
+          avp.size = this->size;
+
         /* skip decoding b frames if too late */
-        this->context->hurry_up = (this->skipframes > 0);
+        this->context->skip_frame = (this->skipframes > 0);
 
         lprintf("buffer size: %d\n", this->size);
-        len = avcodec_decode_video (this->context, this->av_frame,
-                                    &got_picture, &chunk_buf[offset],
-                                    this->size);
+        len = avcodec_decode_video2 (this->context, this->av_frame,
+                                     &got_picture, &avp);
 
 #ifdef AVCODEC_HAS_REORDERED_OPAQUE
         /* reset consumed pts value */
