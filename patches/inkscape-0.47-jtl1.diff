--- inkscape-0.47/src/extension/internal/pdfinput/pdf-parser.cpp~	2009-11-16 17:29:17.000000000 +0000
+++ inkscape-0.47/src/extension/internal/pdfinput/pdf-parser.cpp	2010-04-02 15:35:48.000000000 +0100
@@ -809,7 +809,7 @@ void PdfParser::opSetExtGState(Object ar
 	  blendingColorSpace = NULL;
 	  isolated = knockout = gFalse;
 	  if (!obj4.dictLookup(const_cast<char*>("CS"), &obj5)->isNull()) {
-	    blendingColorSpace = GfxColorSpace::parse(&obj5);
+	      blendingColorSpace = GfxColorSpace::parse(&obj5, NULL);
 	  }
 	  obj5.free();
 	  if (obj4.dictLookup(const_cast<char*>("I"), &obj5)->isBool()) {
@@ -1009,9 +1009,9 @@ void PdfParser::opSetFillColorSpace(Obje
   state->setFillPattern(NULL);
   res->lookupColorSpace(args[0].getName(), &obj);
   if (obj.isNull()) {
-    colorSpace = GfxColorSpace::parse(&args[0]);
+      colorSpace = GfxColorSpace::parse(&args[0], NULL);
   } else {
-    colorSpace = GfxColorSpace::parse(&obj);
+      colorSpace = GfxColorSpace::parse(&obj, NULL);
   }
   obj.free();
   if (colorSpace) {
@@ -1032,9 +1032,9 @@ void PdfParser::opSetStrokeColorSpace(Ob
   state->setStrokePattern(NULL);
   res->lookupColorSpace(args[0].getName(), &obj);
   if (obj.isNull()) {
-    colorSpace = GfxColorSpace::parse(&args[0]);
+      colorSpace = GfxColorSpace::parse(&args[0], NULL);
   } else {
-    colorSpace = GfxColorSpace::parse(&obj);
+      colorSpace = GfxColorSpace::parse(&obj, NULL);
   }
   obj.free();
   if (colorSpace) {
@@ -1101,7 +1101,7 @@ void PdfParser::opSetFillColorN(Object a
       builder->updateStyle(state);
     }
     if (args[numArgs-1].isName() &&
-	(pattern = res->lookupPattern(args[numArgs-1].getName()))) {
+	(pattern = res->lookupPattern(args[numArgs-1].getName(), NULL))) {
       state->setFillPattern(pattern);
       builder->updateStyle(state);
     }
@@ -1145,7 +1145,7 @@ void PdfParser::opSetStrokeColorN(Object
       builder->updateStyle(state);
     }
     if (args[numArgs-1].isName() &&
-	(pattern = res->lookupPattern(args[numArgs-1].getName()))) {
+	(pattern = res->lookupPattern(args[numArgs-1].getName(), NULL))) {
       state->setStrokePattern(pattern);
       builder->updateStyle(state);
     }
@@ -1543,7 +1543,7 @@ void PdfParser::opShFill(Object args[],
   double *matrix = NULL;
   GBool savedState = gFalse;
 
-  if (!(shading = res->lookupShading(args[0].getName()))) {
+  if (!(shading = res->lookupShading(args[0].getName(), NULL))) {
     return;
   }
 
@@ -2507,7 +2507,7 @@ void PdfParser::doImage(Object *ref, Str
       }
     }
     if (!obj1.isNull()) {
-      colorSpace = GfxColorSpace::parse(&obj1);
+	colorSpace = GfxColorSpace::parse(&obj1, NULL);
     } else if (csMode == streamCSDeviceGray) {
       colorSpace = new GfxDeviceGrayColorSpace();
     } else if (csMode == streamCSDeviceRGB) {
@@ -2592,7 +2592,7 @@ void PdfParser::doImage(Object *ref, Str
 	  obj2.free();
 	}
       }
-      maskColorSpace = GfxColorSpace::parse(&obj1);
+      maskColorSpace = GfxColorSpace::parse(&obj1, NULL);
       obj1.free();
       if (!maskColorSpace || maskColorSpace->getMode() != csDeviceGray) {
 	goto err1;
@@ -2767,7 +2767,7 @@ void PdfParser::doForm(Object *str) {
     if (obj1.dictLookup(const_cast<char*>("S"), &obj2)->isName(const_cast<char*>("Transparency"))) {
       transpGroup = gTrue;
       if (!obj1.dictLookup(const_cast<char*>("CS"), &obj3)->isNull()) {
-	blendingColorSpace = GfxColorSpace::parse(&obj3);
+	  blendingColorSpace = GfxColorSpace::parse(&obj3, NULL);
       }
       obj3.free();
       if (obj1.dictLookup(const_cast<char*>("I"), &obj3)->isBool()) {
--- inkscape-0.47/src/extension/internal/filter/filter-file.cpp~	2009-11-16 17:29:18.000000000 +0000
+++ inkscape-0.47/src/extension/internal/filter/filter-file.cpp	2010-04-16 20:13:07.000000000 +0100
@@ -161,7 +161,7 @@ Filter::filters_load_node (Inkscape::XML
 	mywriter writer;
 	sp_repr_write_stream(node, writer, 0, FALSE, g_quark_from_static_string("svg"), 0, 0);
 
-    Inkscape::Extension::build_from_mem(xml_str, new Filter::Filter(g_strdup(writer.c_str())));
+    Inkscape::Extension::build_from_mem(xml_str, new Filter(g_strdup(writer.c_str())));
 	g_free(xml_str);
     return;
 }
--- inkscape-0.47/src/extension/internal/filter/filter.cpp~	2009-11-16 17:29:18.000000000 +0000
+++ inkscape-0.47/src/extension/internal/filter/filter.cpp	2010-04-16 20:14:00.000000000 +0100
@@ -217,7 +217,7 @@ Filter::filter_init (gchar const * id, g
                 "<menu-tip>%s</menu-tip>\n"
             "</effect>\n"
         "</inkscape-extension>\n", name, id, submenu, tip);
-    Inkscape::Extension::build_from_mem(xml_str, new Filter::Filter(filter));
+    Inkscape::Extension::build_from_mem(xml_str, new Filter(filter));
 	g_free(xml_str);
     return;
 }
--- inkscape-0.47/src/eraser-context.cpp~	2009-11-16 17:29:46.000000000 +0000
+++ inkscape-0.47/src/eraser-context.cpp	2010-04-16 19:41:39.000000000 +0100
@@ -749,7 +749,7 @@ set_to_accumulated(SPEraserContext *dc)
                 if ( eraserMode ) {
                     toWorkOn = sp_document_partial_items_in_box(sp_desktop_document(desktop), desktop->dkey, bounds);
                 } else {
-                    Inkscape::Rubberband::Rubberband *r = Inkscape::Rubberband::get(desktop);
+                    Inkscape::Rubberband *r = Inkscape::Rubberband::get(desktop);
                     toWorkOn = sp_document_items_at_points(sp_desktop_document(desktop), desktop->dkey, r->getPoints());
                 }
                 toWorkOn = g_slist_remove( toWorkOn, acid );
--- inkscape-0.47/src/flood-context.cpp~	2009-11-16 17:29:46.000000000 +0000
+++ inkscape-0.47/src/flood-context.cpp	2010-04-16 19:42:37.000000000 +0100
@@ -900,7 +900,7 @@ static void sp_flood_do_flood_fill(SPEve
     if (is_point_fill) {
         fill_points.push_back(Geom::Point(event->button.x, event->button.y));
     } else {
-        Inkscape::Rubberband::Rubberband *r = Inkscape::Rubberband::get(desktop);
+        Inkscape::Rubberband *r = Inkscape::Rubberband::get(desktop);
         fill_points = r->getPoints();
     }
 
@@ -1206,7 +1206,7 @@ static gint sp_flood_context_root_handle
 
     case GDK_BUTTON_RELEASE:
         if (event->button.button == 1 && !event_context->space_panning) {
-            Inkscape::Rubberband::Rubberband *r = Inkscape::Rubberband::get(desktop);
+            Inkscape::Rubberband *r = Inkscape::Rubberband::get(desktop);
             if (r->is_started()) {
                 // set "busy" cursor
                 desktop->setWaitingCursor();
--- inkscape-0.47/src/gradient-context.cpp~	2009-11-16 17:29:45.000000000 +0000
+++ inkscape-0.47/src/gradient-context.cpp	2010-04-16 19:43:18.000000000 +0100
@@ -641,7 +641,7 @@ sp_gradient_context_root_handler(SPEvent
                 if (!event_context->within_tolerance) {
                     // we've been dragging, either do nothing (grdrag handles that),
                     // or rubberband-select if we have rubberband
-                    Inkscape::Rubberband::Rubberband *r = Inkscape::Rubberband::get(desktop);
+                    Inkscape::Rubberband *r = Inkscape::Rubberband::get(desktop);
                     if (r->is_started() && !event_context->within_tolerance) {
                         // this was a rubberband drag
                         if (r->getMode() == RUBBERBAND_MODE_RECT) {
--- inkscape-0.47/src/select-context.cpp~	2009-11-16 17:29:45.000000000 +0000
+++ inkscape-0.47/src/select-context.cpp	2010-04-16 19:48:31.000000000 +0100
@@ -602,7 +602,7 @@ sp_select_context_root_handler(SPEventCo
                     }
                     sc->item = NULL;
                 } else {
-                    Inkscape::Rubberband::Rubberband *r = Inkscape::Rubberband::get(desktop);
+                    Inkscape::Rubberband *r = Inkscape::Rubberband::get(desktop);
                     if (r->is_started() && !within_tolerance) {
                         // this was a rubberband drag
                         GSList *items = NULL;
