--- gcc-4.0.2/gcc/config/arm/linux-elf.h~	2005-03-04 16:14:01.000000000 +0000
+++ gcc-4.0.2/gcc/config/arm/linux-elf.h	2005-12-04 21:25:14.000000000 +0000
@@ -32,7 +32,7 @@
 #define NO_IMPLICIT_EXTERN_C
 
 #undef  TARGET_DEFAULT_FLOAT_ABI
-#define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_HARD
+#define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_SOFT
 
 #undef  TARGET_DEFAULT
 #define TARGET_DEFAULT (0)
@@ -43,7 +43,7 @@
 
 #undef  MULTILIB_DEFAULTS
 #define MULTILIB_DEFAULTS \
-	{ "marm", "mlittle-endian", "mhard-float", "mno-thumb-interwork" }
+	{ "marm", "mlittle-endian", "msoft-float", "mno-thumb-interwork" }
 
 /* The GNU C++ standard library requires that these macros be defined.  */
 #undef CPLUSPLUS_CPP_SPEC
--- gcc-4.0.2/gcc/config/arm/linux-elf.h~	2005-03-04 16:14:01.000000000 +0000
+++ gcc-4.0.2/gcc/config/arm/linux-elf.h	2005-12-13 18:42:52.000000000 +0000
@@ -56,7 +56,7 @@
    %{shared:-lc} \
    %{!shared:%{profile:-lc_p}%{!profile:-lc}}"
 
-#define LIBGCC_SPEC "%{msoft-float:-lfloat} %{mfloat-abi=soft*:-lfloat} -lgcc"
+#define LIBGCC_SPEC "-lgcc"
 
 /* Provide a STARTFILE_SPEC appropriate for GNU/Linux.  Here we add
    the GNU/Linux magical crtbegin.o file (see crtstuff.c) which
--- gcc-4.3.0/gcc/config/arm/t-linux~	2008-03-09 21:33:55.000000000 +0000
+++ gcc-4.3.0/gcc/config/arm/t-linux	2008-03-09 21:35:37.000000000 +0000
@@ -1,10 +1,17 @@
 # Just for these, we omit the frame pointer since it makes such a big
 # difference.
-TARGET_LIBGCC2_CFLAGS = -fomit-frame-pointer -fPIC
+TARGET_LIBGCC2_CFLAGS = -fomit-frame-pointer -fPIC $(CFLAGS_FOR_TARGET)
 
 LIB1ASMSRC = arm/lib1funcs.asm
-LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_lnx _clzsi2 _clzdi2 \
-	_arm_addsubdf3 _arm_addsubsf3
+LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_lnx _bb_init_func \
+	_call_via_rX _interwork_call_via_rX \
+	_lshrdi3 _ashrdi3 _ashldi3 \
+	_arm_negdf2 _arm_addsubdf3 _arm_muldivdf3 _arm_cmpdf2 _arm_unorddf2 \
+	_arm_fixdfsi _arm_fixunsdfsi \
+	_arm_truncdfsf2 _arm_negsf2 _arm_addsubsf3 _arm_muldivsf3 \
+	_arm_cmpsf2 _arm_unordsf2 _arm_fixsfsi _arm_fixunssfsi \
+	_arm_floatdidf _arm_floatdisf _arm_floatundidf _arm_floatundisf \
+	_clzsi2 _clzdi2
 
 # MULTILIB_OPTIONS = mhard-float/msoft-float
 # MULTILIB_DIRNAMES = hard-float soft-float
--- gcc-4.4.2/gcc/config/arm/libunwind.S~	2009-04-10 00:23:07.000000000 +0100
+++ gcc-4.4.2/gcc/config/arm/libunwind.S	2010-01-17 20:26:56.000000000 +0000
@@ -48,6 +48,11 @@
 #endif
 #endif
 
+#if (__ARM_ARCH__ == 3)
+.arch armv5t
+.object_arch armv3
+#endif
+
 #ifdef __ARM_ARCH_6M__
 
 /* r0 points to a 16-word block.  Upload these values to the actual core
--- gcc-4.6.2/gcc/config/alpha/linux-unwind.h~	2011-10-18 13:55:06.000000000 +0100
+++ gcc-4.6.2/gcc/config/alpha/linux-unwind.h	2011-11-06 21:27:30.000000000 +0000
@@ -25,7 +25,10 @@ see the files COPYING3 and COPYING.RUNTI
 /* Do code reading to identify a signal frame, and set the frame
    state data appropriately.  See unwind-dw2.c for the structs.  */
 
+#ifndef inhibit_libc
 #include <signal.h>
 #include <sys/ucontext.h>
+#endif
+
 
 #define MD_FALLBACK_FRAME_STATE_FOR alpha_fallback_frame_state
@@ -34,6 +37,7 @@ static _Unwind_Reason_Code
 alpha_fallback_frame_state (struct _Unwind_Context *context,
 			    _Unwind_FrameState *fs)
 {
+#ifndef inhibit_libc
   unsigned int *pc = context->ra;
   struct sigcontext *sc;
   long new_cfa, i;
@@ -75,6 +79,6 @@ alpha_fallback_frame_state (struct _Unwi
   fs->regs.reg[64].loc.offset = (long)&sc->sc_pc - new_cfa;
   fs->retaddr_column = 64;
   fs->signal_frame = 1;
-
+#endif
   return _URC_NO_REASON;
 }
